#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/tim/Documents/Anwendungsprojekt/Bachelor/MiniLua/examples/cli/main.cpp
MiniLua/luainterpreter.hpp
/home/tim/Documents/Anwendungsprojekt/Bachelor/MiniLua/examples/cli/MiniLua/luainterpreter.hpp
MiniLua/luaparser.hpp
/home/tim/Documents/Anwendungsprojekt/Bachelor/MiniLua/examples/cli/MiniLua/luaparser.hpp
chrono
-
vector
-

include/MiniLua/environment.hpp
val.hpp
include/MiniLua/val.hpp

include/MiniLua/luaast.hpp
luatoken.hpp
include/MiniLua/luatoken.hpp
val.hpp
include/MiniLua/val.hpp
functional
-
memory
-
vector
-

include/MiniLua/luainterpreter.hpp
environment.hpp
include/MiniLua/environment.hpp
luaast.hpp
include/MiniLua/luaast.hpp
operators.hpp
include/MiniLua/operators.hpp
sourcechange.hpp
include/MiniLua/sourcechange.hpp
sourceexp.hpp
include/MiniLua/sourceexp.hpp
memory
-

include/MiniLua/luaparser.hpp
luaast.hpp
include/MiniLua/luaast.hpp
boost/spirit/include/lex_lexertl.hpp
-
chrono
-
memory
-
regex
-
string
-
unordered_map
-
utility
-
variant
-
vector
-

include/MiniLua/luatoken.hpp
iostream
-
string
-

include/MiniLua/operators.hpp
luatoken.hpp
include/MiniLua/luatoken.hpp
val.hpp
include/MiniLua/val.hpp

include/MiniLua/sourcechange.hpp
luatoken.hpp
include/MiniLua/luatoken.hpp
val.hpp
include/MiniLua/val.hpp

include/MiniLua/sourceexp.hpp
luatoken.hpp
include/MiniLua/luatoken.hpp
val.hpp
include/MiniLua/val.hpp

include/MiniLua/val.hpp
functional
-
memory
-
optional
-
stdexcept
-
string
-
type_traits
-
unordered_map
-
variant
-

